
name: Publish Main Release

on:
  release:
    types: [published]

jobs:

  release:
    name: Release
    strategy:
      matrix:
        kind: ['portable', 'linux', 'windows', 'macOS', 'macOSIntel']
        include:
          - kind: portable
            os: ubuntu-latest
            target: portable
          - kind: linux
            os: ubuntu-latest
            target: linux-x64
          - kind: windows
            os: windows-latest
            target: win-x64
          - kind: macOS
            os: macos-latest
            target: osx-arm64
          - kind: macOSIntel
            os: macos-latest
            target: osx-x64

    runs-on: ${{ matrix.os }}
    timeout-minutes: 15

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    # - name: Verify commit exists in origin/main
    #   run: |
    #     git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
    #     git branch --remote --contains | grep origin/main
    - name: Set VERSION variable from tag
      shell: bash
      run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
    - name: Add GitHub package source
      shell: bash
      run: dotnet nuget add source https://nuget.pkg.github.com/Crafted-Solutions/index.json -n cs -u ${NUGET_USER} -p ${NUGET_TOKEN} --store-password-in-clear-text
      env:
        NUGET_TOKEN: ${{ secrets.PACKAGE_READ_TOKEN }}
        NUGET_USER: ${{ vars.NUGET_USER }}
    - name: Build
      shell: bash
      run: |
        dotnet publish src/MarBasGleaner/MarBasGleaner.csproj -p:PublishProfile=${{ matrix.target }} -p:Version=${VERSION}

        if [ "${{ matrix.target }}" == "win-x64" ]; then
            7z a -tzip "MarBasGleaner-${VERSION}-${{ matrix.target }}.zip" "./distr/${{ matrix.target }}/*"
        else
            tar czvf "MarBasGleaner-${VERSION}-${{ matrix.target }}.tar.gz" -C "./distr/${{ matrix.target }}" .
        fi

    - name: Publish to GitHub
      uses: softprops/action-gh-release@v1
      with:
        files: "MarBasGleaner-*"
      env:
        GITHUB_TOKEN: ${{ secrets.PACKAGE_TOKEN }}
    - name: Cleanup
      if: always()
      continue-on-error: true
      run: |
        dotnet nuget remove source cs
