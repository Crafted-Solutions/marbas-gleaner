//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MarBasGleaner.Commands {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ConnectCmdL10n {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ConnectCmdL10n() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MarBasGleaner.Commands.ConnectCmdL10n", typeof(ConnectCmdL10n).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adopt specified checkpoint (-1 for latest) as current one for this connection.
        /// </summary>
        internal static string AdoptCheckpointOptionDesc {
            get {
                return ResourceManager.GetString("AdoptCheckpointOptionDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authentication type to use with MarBas broker connection.
        /// </summary>
        internal static string AuthOptionDesc {
            get {
                return ResourceManager.GetString("AuthOptionDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connects a tracking snapshot with MarBas broker instance.
        /// </summary>
        internal static string CmdDesc {
            get {
                return ResourceManager.GetString("CmdDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error connecting snapshot &apos;{0}&apos; with {1}: {2}.
        /// </summary>
        internal static string ErrorConnectException {
            get {
                return ResourceManager.GetString("ErrorConnectException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is already tracking &apos;{1}&apos;.
        /// </summary>
        internal static string ErrorConnectionState {
            get {
                return ResourceManager.GetString("ErrorConnectionState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a recognizable absolute URI.
        /// </summary>
        internal static string ErrorURL {
            get {
                return ResourceManager.GetString("ErrorURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignore SSL errors, specifically trust all (self-signed) certificates.
        /// </summary>
        internal static string IgnoreSslErrorsOptionDesc {
            get {
                return ResourceManager.GetString("IgnoreSslErrorsOptionDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connecting {0} with snapshot {1}.
        /// </summary>
        internal static string MsgCmdStart {
            get {
                return ResourceManager.GetString("MsgCmdStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Snapshot successfully connected to &apos;{0}&apos;.
        /// </summary>
        internal static string MsgCmdSuccess {
            get {
                return ResourceManager.GetString("MsgCmdSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Broker URL.
        /// </summary>
        internal static string URLArgDesc {
            get {
                return ResourceManager.GetString("URLArgDesc", resourceCulture);
            }
        }
    }
}
